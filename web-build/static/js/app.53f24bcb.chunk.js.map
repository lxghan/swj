{"version":3,"sources":["App.js"],"names":["Stack","createStackNavigator","searchInp","searchInp2","url","SWJ","navigation","React","useState","fname","onChangeFname","lname","onChangeLname","pname","onChangePname","lp","onChangeLp","style","styles","container","header","input","onChangeText","value","placeholder","title","onPress","input1","navigate","undefined","SearchRes","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","method","then","res","json","result","message","Array","isArray","length","map","element","first_name","Surname","Bio","bio","DOB","DOD","city","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","margin","fontSize","fontWeight","App","Navigator","Screen","name","component"],"mappings":"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","file":"static/js/app.53f24bcb.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, TextInput, BackHandler } from 'react-native';\r\nimport 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator, HeaderBackButton } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\nlet searchInp = \"\";\r\nlet searchInp2 = \"\";\r\nlet url = \"https://appmockapi.herokuapp.com/author/search\";\r\n\r\nconst SWJ = ({navigation}) => {\r\n  const [fname, onChangeFname] = React.useState();\r\n  const [lname, onChangeLname] = React.useState();\r\n  const [pname, onChangePname] = React.useState();\r\n  const [lp, onChangeLp] = React.useState();\r\n\r\n  searchInp = \"\";\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Society of Women Journalists</Text>\r\n      <Text>{\"\\n\\n\"}</Text>\r\n\r\n        <TextInput style={styles.input}\r\n        onChangeText={onChangeFname}\r\n        value={fname}\r\n        placeholder=\"First name...\"/>\r\n\r\n        <TextInput style={styles.input}\r\n        onChangeText={onChangeLname}\r\n        value={lname}\r\n        placeholder=\"Last name...\"/>\r\n\r\n        <TextInput style={styles.input}\r\n        onChangeText={onChangePname}\r\n        value={pname}\r\n        placeholder=\"Pen name...\"/>\r\n\r\n        <TextInput style={styles.input}\r\n        onChangeText={onChangeLp}\r\n        value={lp}\r\n        placeholder=\"Leadership position...\"/>\r\n\r\n      <Text>{\"\\n\\n\"}</Text>\r\n      <Button title=\"Search\"\r\n        onPress={() => {\r\n        input1(fname, lname, pname, lp);\r\n        navigation.navigate('Search Results');\r\n      }}/>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst input1 = (fname, lname, pname, lp) => {\r\n  if (fname != undefined){\r\n    searchInp += \"?first_name=\" + fname;\r\n  }\r\n}\r\n/*\r\n    input2(fname, lname, pname, lp);\r\n  }\r\n  else if (lname != undefined){\r\n    searchInp += \"?Surname=\" + lname;\r\n    input2(fname, lname, pname, lp);\r\n  }\r\n  else if (pname != undefined){\r\n    searchInp += \"?pen name=\" + pname;\r\n    input2(fname, lname, pname, lp);\r\n  }\r\n  else if (lp != undefined){\r\n    searchInp += \"?leadership position=\" + lp;\r\n    input2(fname, lname, pname, lp);\r\n  }\r\n\r\n}\r\n\r\nconst input2 = (fname, lname, pname, lp) => {\r\n  if (lname != undefined){\r\n    searchInp += \"&Surname=\" + lname;\r\n  }\r\n  if (pname != undefined){\r\n    searchInp += \"&pen name=\" + pname;\r\n  }\r\n  if (lp != undefined){\r\n    searchInp += \"&leadership position=\"  + lp;\r\n  }\r\n}\r\n*/\r\nconst SearchRes = ({navigation}) => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [items, setItems] = React.useState([]);\r\n  searchInp2 = \"\";\r\n\r\n  React.useEffect(() => {\r\n    fetch(url + searchInp, {\r\n      method: \"GET\"})\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      if (Array.isArray(items) && items.length){\r\n        return items.map(element => {\r\n            return (\r\n              <View>\r\n                <Text onPress={() => {\r\n                  searchInp2 = \"?first_name=\" + element.first_name + \"&Surname=\" + element.Surname;\r\n                  navigation.navigate('Biography')}}\r\n                  style={styles.header}>\r\n                  {element.first_name + \" \" + element.Surname}\r\n                </Text>\r\n              </View>\r\n            )\r\n        })\r\n      }\r\n      else {\r\n        return (\r\n          <View>\r\n            <Text style={styles.header}>No result matched</Text>\r\n          </View>\r\n        )\r\n      }\r\n    }\r\n\r\n}\r\n\r\nconst Bio = () => {\r\n  const [error, setError] = React.useState(null);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [items, setItems] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(url + searchInp2, {\r\n      method: \"GET\"})\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return items.map(element => {\r\n        return(\r\n          <View>\r\n            <Text style={styles.header}>{element['prefix/title'] + \" \" + element.first_name + \" \" + element.Surname}</Text>\r\n            <Text style={styles.bio}>{\"Pen name: \" + element['pen name']}</Text>\r\n            <Text style={styles.bio}>{\"Date of Birth: \" + element.DOB}</Text>\r\n            <Text style={styles.bio}>{\"Date of Death: \" + element.DOD}</Text>\r\n            <Text style={styles.bio}>{\"Leadership Position: \" + element['leadership position']}</Text>\r\n            <Text style={styles.bio}>{\"Street Address: \" + element['street address']}</Text>\r\n            <Text style={styles.bio}>{\"Neighborhood: \" + element['neighborhood']}</Text>\r\n            <Text style={styles.bio}>{\"City: \" + element.city}</Text>\r\n            <Text style={styles.bio}>{\"Post Code: \" + element['post code']}</Text>\r\n            <Text style={styles.bio}>{\"Proposer: \" + element['proposer']}</Text>\r\n            <Text style={styles.bio}>{\"Organization 1: \" + element['org1']}</Text>\r\n            <Text style={styles.bio}>{\"Organization 2: \" + element['org2']}</Text>\r\n            <Text style={styles.bio}>{\"Organization 3: \" + element['org3']}</Text>\r\n            <Text style={styles.bio}>{\"Organization 4: \" + element['org4']}</Text>\r\n            <Text style={styles.bio}>{\"Organization 5: \" + element['org5']}</Text>\r\n            <Text style={styles.bio}>{\"Periodicals: \" + element['periodicals']}</Text>\r\n            <Text style={styles.bio}>{\"Source of Info.: \" + element['source of info']}</Text>\r\n            <Text style={styles.bio}>{\"Other: \" + element['other']}</Text>\r\n            <Text style={styles.bio}>{\"Joined: \" + element['Joined']}</Text>\r\n          </View>\r\n        )\r\n      })\r\n    }\r\n\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"SWJ\" component={SWJ}/>\r\n        <Stack.Screen name=\"Search Results\" component={SearchRes}/>\r\n        <Stack.Screen name=\"Biography\" component={Bio}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    margin: 12,\r\n    fontSize: 15,\r\n  },\r\n  header: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n  bio: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"sourceRoot":""}